-- +--------------------------------------------------------------------+
-- | CiviCRM version 5                                                  |
-- +--------------------------------------------------------------------+
-- | Copyright CiviCRM LLC (c) 2004-2018                                |
-- +--------------------------------------------------------------------+
-- | This file is a part of CiviCRM.                                    |
-- |                                                                    |
-- | CiviCRM is free software; you can copy, modify, and distribute it  |
-- | under the terms of the GNU Affero General Public License           |
-- | Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
-- |                                                                    |
-- | CiviCRM is distributed in the hope that it will be useful, but     |
-- | WITHOUT ANY WARRANTY; without even the implied warranty of         |
-- | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
-- | See the GNU Affero General Public License for more details.        |
-- |                                                                    |
-- | You should have received a copy of the GNU Affero General Public   |
-- | License and the CiviCRM Licensing Exception along                  |
-- | with this program; if not, contact CiviCRM LLC                     |
-- | at info[AT]civicrm[DOT]org. If you have questions about the        |
-- | GNU Affero General Public License or the licensing of CiviCRM,     |
-- | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
-- +--------------------------------------------------------------------+
--
-- Generated from schema.tpl
-- DO NOT EDIT.  Generated by CRM_Core_CodeGen
--


-- +--------------------------------------------------------------------+
-- | CiviCRM version 5                                                  |
-- +--------------------------------------------------------------------+
-- | Copyright CiviCRM LLC (c) 2004-2018                                |
-- +--------------------------------------------------------------------+
-- | This file is a part of CiviCRM.                                    |
-- |                                                                    |
-- | CiviCRM is free software; you can copy, modify, and distribute it  |
-- | under the terms of the GNU Affero General Public License           |
-- | Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
-- |                                                                    |
-- | CiviCRM is distributed in the hope that it will be useful, but     |
-- | WITHOUT ANY WARRANTY; without even the implied warranty of         |
-- | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
-- | See the GNU Affero General Public License for more details.        |
-- |                                                                    |
-- | You should have received a copy of the GNU Affero General Public   |
-- | License and the CiviCRM Licensing Exception along                  |
-- | with this program; if not, contact CiviCRM LLC                     |
-- | at info[AT]civicrm[DOT]org. If you have questions about the        |
-- | GNU Affero General Public License or the licensing of CiviCRM,     |
-- | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
-- +--------------------------------------------------------------------+
--
-- Generated from drop.tpl
-- DO NOT EDIT.  Generated by CRM_Core_CodeGen
--
-- /*******************************************************
-- *
-- * Clean up the exisiting tables
-- *
-- *******************************************************/

SET FOREIGN_KEY_CHECKS=0;

DROP TABLE IF EXISTS `civicrm_sdd_txgroup`;
DROP TABLE IF EXISTS `civicrm_sdd_entity_mandate`;
DROP TABLE IF EXISTS `civicrm_sdd_mandate`;
DROP TABLE IF EXISTS `civicrm_sdd_file`;
DROP TABLE IF EXISTS `civicrm_sdd_creditor`;
DROP TABLE IF EXISTS `civicrm_sdd_contribution_txgroup`;

SET FOREIGN_KEY_CHECKS=1;
-- /*******************************************************
-- *
-- * Create new tables
-- *
-- *******************************************************/

-- /*******************************************************
-- *
-- * civicrm_sdd_contribution_txgroup
-- *
-- * Link Contributions to TX Group
-- *
-- *******************************************************/
CREATE TABLE `civicrm_sdd_contribution_txgroup` (


     `id` int unsigned  AUTO_INCREMENT  COMMENT 'primary key',
     `contribution_id` int unsigned    COMMENT 'FK to Contribution ID',
     `txgroup_id` int unsigned    COMMENT 'FK to civicrm_sdd_txgroup' 
,
        PRIMARY KEY (`id`)
 
    ,     INDEX `contriblookup`(
        contribution_id
  )
  ,     INDEX `txglookup`(
        txgroup_id
  )
  
,          CONSTRAINT FK_civicrm_sdd_contribution_txgroup_contribution_id FOREIGN KEY (`contribution_id`) REFERENCES `civicrm_contribution`(`id`) ,          CONSTRAINT FK_civicrm_sdd_contribution_txgroup_txgroup_id FOREIGN KEY (`txgroup_id`) REFERENCES `civicrm_sdd_txgroup`(`id`)   
)    ;

-- /*******************************************************
-- *
-- * civicrm_sdd_creditor
-- *
-- *******************************************************/
CREATE TABLE `civicrm_sdd_creditor` (


     `id` int unsigned NOT NULL AUTO_INCREMENT  COMMENT 'ID',
     `creditor_id` int unsigned    COMMENT 'FK to Contact ID that owns that account',
     `identifier` varchar(35)    COMMENT 'Provided by the bank. ISO country code+check digit+ZZZ+country specific identifier',
     `name` varchar(255)    COMMENT 'by default creditor_id.display_name snapshot at creation',
     `address` varchar(255)    COMMENT 'by default creditor_id.address (billing) at creation',
     `country_id` int unsigned    COMMENT 'Which Country does this address belong to.',
     `iban` varchar(42) NULL   COMMENT 'Iban of the creditor',
     `bic` varchar(11)    COMMENT 'BIC of the creditor',
     `mandate_prefix` varchar(4)    COMMENT 'prefix for mandate identifiers',
     `payment_processor_id` int unsigned    COMMENT 'Payment processor link (to be deprecated)',
     `category` varchar(4)    COMMENT 'Default value',
     `tag` varchar(64)    COMMENT 'Place this creditor\'s transaction groups in an XML file tagged with this value.',
     `mandate_active` tinyint    COMMENT 'If true, new Mandates for this Creditor are set to active directly upon creation; otherwise, they have to be activated explicitly later on.',
     `sepa_file_format_id` int unsigned    COMMENT 'Variant of the pain.008 format to use when generating SEPA XML files for this creditor. FK to SEPA File Formats in civicrm_option_value.' 
,
        PRIMARY KEY (`id`)
 
 
,          CONSTRAINT FK_civicrm_sdd_creditor_creditor_id FOREIGN KEY (`creditor_id`) REFERENCES `civicrm_contact`(`id`) ON DELETE SET NULL,          CONSTRAINT FK_civicrm_sdd_creditor_country_id FOREIGN KEY (`country_id`) REFERENCES `civicrm_country`(`id`) ON DELETE SET NULL,          CONSTRAINT FK_civicrm_sdd_creditor_payment_processor_id FOREIGN KEY (`payment_processor_id`) REFERENCES `civicrm_payment_processor`(`id`)   
)    ;

-- /*******************************************************
-- *
-- * civicrm_sdd_file
-- *
-- *******************************************************/
CREATE TABLE `civicrm_sdd_file` (


     `id` int unsigned NOT NULL AUTO_INCREMENT  COMMENT 'ID',
     `reference` varchar(64)    COMMENT 'End-to-end reference for this sdd file.',
     `filename` char(64)    COMMENT 'Name of the generated file',
     `latest_submission_date` datetime    COMMENT 'Latest submission date',
     `created_date` datetime    COMMENT 'When was this item created',
     `created_id` int unsigned    COMMENT 'FK to Contact ID of creator',
     `status_id` int unsigned NOT NULL   COMMENT 'fk to Batch Status options in civicrm_option_values',
     `comments` text    COMMENT 'Comments about processing of this file',
     `tag` varchar(64)    COMMENT 'Tag used to group multiple creditors in this XML file.' 
,
        PRIMARY KEY (`id`)
 
    ,     UNIQUE INDEX `UI_reference`(
        reference
  )
  ,     UNIQUE INDEX `UI_filename`(
        filename
  )
  
,          CONSTRAINT FK_civicrm_sdd_file_created_id FOREIGN KEY (`created_id`) REFERENCES `civicrm_contact`(`id`) ON DELETE SET NULL  
)    ;

-- /*******************************************************
-- *
-- * civicrm_sdd_mandate
-- *
-- *******************************************************/
CREATE TABLE `civicrm_sdd_mandate` (


     `id` int unsigned NOT NULL AUTO_INCREMENT  COMMENT 'ID',
     `reference` varchar(35) NOT NULL   COMMENT 'A unique mandate reference',
     `source` varchar(64)    COMMENT 'Information about the source of registration of the mandate',
     `entity_table` varchar(64)    COMMENT 'Physical tablename for the contract entity being joined, eg contributionRecur or Membership',
     `entity_id` int unsigned NOT NULL   COMMENT 'FK to contract entity table specified in entity_table column.',
     `date` datetime NOT NULL   COMMENT 'by default now()',
     `creditor_id` int unsigned    COMMENT 'FK to ssd_creditor',
     `contact_id` int unsigned    COMMENT 'FK to Contact ID of the debtor',
     `iban` varchar(42) NULL   COMMENT 'Iban of the debtor',
     `bic` varchar(11)    COMMENT 'BIC of the debtor',
     `type` varchar(4) NOT NULL  DEFAULT "RCUR" COMMENT 'RCUR for recurrent (default), OOFF for one-shot',
     `status` varchar(8) NOT NULL  DEFAULT "INIT" COMMENT 'Status of the mandate (INIT, OOFF, FRST, RCUR, SENT, INVALID, COMPLETE, ONHOLD)',
     `creation_date` datetime    ,
     `first_contribution_id` int unsigned    COMMENT 'FK to civicrm_contribution',
     `validation_date` datetime     
,
        PRIMARY KEY (`id`)
 
    ,     UNIQUE INDEX `reference`(
        reference
  )
  ,     INDEX `index_entity`(
        entity_table
      , entity_id
  )
  ,     INDEX `iban`(
        iban
  )
  
,          CONSTRAINT FK_civicrm_sdd_mandate_creditor_id FOREIGN KEY (`creditor_id`) REFERENCES `civicrm_sdd_creditor`(`id`) ON DELETE SET NULL,          CONSTRAINT FK_civicrm_sdd_mandate_contact_id FOREIGN KEY (`contact_id`) REFERENCES `civicrm_contact`(`id`) ON DELETE SET NULL,          CONSTRAINT FK_civicrm_sdd_mandate_first_contribution_id FOREIGN KEY (`first_contribution_id`) REFERENCES `civicrm_contribution`(`id`)   
)    ;

-- /*******************************************************
-- *
-- * civicrm_sdd_entity_mandate
-- *
-- * Links SEPA Mandates to other entities
-- *
-- *******************************************************/
CREATE TABLE `civicrm_sdd_entity_mandate` (


     `id` int unsigned NOT NULL AUTO_INCREMENT  COMMENT 'Unique SepaMandateLink ID',
     `mandate_id` int unsigned    COMMENT 'FK to SepaMandate ID',
     `entity_table` varchar(64)    COMMENT 'Physical table name for entity being linked, eg civicrm_membership',
     `entity_id` int unsigned NOT NULL   COMMENT 'FK to entity table specified in entity_table column',
     `class` varchar(16)    COMMENT 'Link class, freely defined by client',
     `is_active` tinyint    COMMENT 'Is this link still active?',
     `creation_date` datetime    COMMENT 'Link creation date',
     `start_date` datetime    COMMENT 'Start date of the link (optional)',
     `end_date` datetime    COMMENT 'End date of the link (optional)' 
,
        PRIMARY KEY (`id`)
 
    ,     INDEX `index_entity`(
        entity_table
      , entity_id
  )
  ,     INDEX `class`(
        class
  )
  ,     INDEX `is_active`(
        is_active
  )
  ,     INDEX `start_date`(
        start_date
  )
  ,     INDEX `end_date`(
        end_date
  )
  
,          CONSTRAINT FK_civicrm_sdd_entity_mandate_mandate_id FOREIGN KEY (`mandate_id`) REFERENCES `civicrm_sdd_mandate`(`id`) ON DELETE CASCADE  
)    ;

-- /*******************************************************
-- *
-- * civicrm_sdd_txgroup
-- *
-- *******************************************************/
CREATE TABLE `civicrm_sdd_txgroup` (


     `id` int unsigned NOT NULL AUTO_INCREMENT  COMMENT 'ID',
     `reference` varchar(64)    COMMENT 'End-to-end reference for this tx group.',
     `type` char(4)    COMMENT 'FRST, RCUR or OOFF',
     `collection_date` datetime    COMMENT 'Target collection date',
     `latest_submission_date` datetime    COMMENT 'Latest submission date',
     `created_date` datetime    COMMENT 'When was this item created',
     `status_id` int unsigned NOT NULL   COMMENT 'fk sepa group Status options in civicrm_option_values',
     `sdd_creditor_id` int unsigned    COMMENT 'fk to SDD Creditor Id',
     `sdd_file_id` int unsigned    COMMENT 'fk to SDD File Id' 
,
        PRIMARY KEY (`id`)
 
    ,     UNIQUE INDEX `UI_reference`(
        reference
  )
  ,     INDEX `creditor_id`(
        sdd_creditor_id
  )
  ,     INDEX `file_id`(
        sdd_file_id
  )
  
,          CONSTRAINT FK_civicrm_sdd_txgroup_sdd_creditor_id FOREIGN KEY (`sdd_creditor_id`) REFERENCES `civicrm_sdd_creditor`(`id`) ON DELETE SET NULL,          CONSTRAINT FK_civicrm_sdd_txgroup_sdd_file_id FOREIGN KEY (`sdd_file_id`) REFERENCES `civicrm_sdd_file`(`id`) ON DELETE SET NULL  
)    ;

 
